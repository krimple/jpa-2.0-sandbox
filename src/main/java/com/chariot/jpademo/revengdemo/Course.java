package com.chariot.jpademo.revengdemo;
// Generated Aug 12, 2011 5:43:50 PM by Hibernate Tools 3.2.2.GA


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name="course"
    ,catalog="coursemgrch4"
)
public class Course  implements java.io.Serializable {


     private Long id;
     private Integer version;
     private BigDecimal cost;
     private String courseType;
     private String description;
     private int maxCapacity;
     private String name;
     private Long trainingProgram;
     private Set<Tag> tags = new HashSet<Tag>(0);
     private Set<Offering> offerings = new HashSet<Offering>(0);
     private Set<Tag> tags_1 = new HashSet<Tag>(0);

    public Course() {
    }

	
    public Course(BigDecimal cost, String courseType, String description, int maxCapacity, String name) {
        this.cost = cost;
        this.courseType = courseType;
        this.description = description;
        this.maxCapacity = maxCapacity;
        this.name = name;
    }
    public Course(BigDecimal cost, String courseType, String description, int maxCapacity, String name, Long trainingProgram, Set<Tag> tags, Set<Offering> offerings, Set<Tag> tags_1) {
       this.cost = cost;
       this.courseType = courseType;
       this.description = description;
       this.maxCapacity = maxCapacity;
       this.name = name;
       this.trainingProgram = trainingProgram;
       this.tags = tags;
       this.offerings = offerings;
       this.tags_1 = tags_1;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version")
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }
    
    @Column(name="cost", nullable=false, precision=12)
    public BigDecimal getCost() {
        return this.cost;
    }
    
    public void setCost(BigDecimal cost) {
        this.cost = cost;
    }
    
    @Column(name="course_type", nullable=false)
    public String getCourseType() {
        return this.courseType;
    }
    
    public void setCourseType(String courseType) {
        this.courseType = courseType;
    }
    
    @Column(name="description", nullable=false, length=1000)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="max_capacity", nullable=false)
    public int getMaxCapacity() {
        return this.maxCapacity;
    }
    
    public void setMaxCapacity(int maxCapacity) {
        this.maxCapacity = maxCapacity;
    }
    
    @Column(name="name", nullable=false, length=60)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="training_program")
    public Long getTrainingProgram() {
        return this.trainingProgram;
    }
    
    public void setTrainingProgram(Long trainingProgram) {
        this.trainingProgram = trainingProgram;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="tag_courses", catalog="coursemgrch4", joinColumns = { 
        @JoinColumn(name="courses", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tags", nullable=false, updatable=false) })
    public Set<Tag> getTags() {
        return this.tags;
    }
    
    public void setTags(Set<Tag> tags) {
        this.tags = tags;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="course")
    public Set<Offering> getOfferings() {
        return this.offerings;
    }
    
    public void setOfferings(Set<Offering> offerings) {
        this.offerings = offerings;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="tag_associations", catalog="coursemgrch4", joinColumns = { 
        @JoinColumn(name="course_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tag_id", nullable=false, updatable=false) })
    public Set<Tag> getTags_1() {
        return this.tags_1;
    }
    
    public void setTags_1(Set<Tag> tags_1) {
        this.tags_1 = tags_1;
    }




}


